# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: windows-latest

steps:
- script: echo Hello, Project04!
  displayName: 'Run a one-line script'

- task: TerraformInstaller@0
  displayName: 'TF_Install'
  inputs:
    terraformVersion: 'latest'
- task: AzureKeyVault@2
  displayName: 'TF_KeyVault'
  inputs:
    azureSubscription: 'SPN-project04'
    KeyVaultName: 'keyvaultproject04212254'
    SecretsFilter: '*'
    RunAsPreJob: true
- task: TerraformTaskV3@3
  displayName: 'TF_Init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'SPN-project04'
    backendAzureRmResourceGroupName: 'S2-RG-project04-CORE'
    backendAzureRmStorageAccountName: 'storageproject04212254'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'main.tfstate'
    
- task: TerraformTaskV3@3
  displayName: 'TF_Plan'
  inputs:
    provider: 'azurerm'
    command: 'plan'
    commandOptions: '-out main.tfplan'
    environmentServiceNameAzureRM: 'SPN-project04'

- task: TerraformTaskV3@3
  displayName: 'TF_Apply'
  inputs:
    provider: 'azurerm'
    command: 'apply'
    commandOptions: ' main.tfplan'
    environmentServiceNameAzureRM: 'SPN-project04'
- task: SqlAzureDacpacDeployment@1
  displayName: 'TF_SQL'
  inputs:
    azureSubscription: 'SPN-project04'
    AuthenticationType: 'server'
    ServerName: '$(SQLServer-InstanceName).database.windows.net'
    DatabaseName: '$(SQLServer-Database1Name)'
    SqlUsername: '$(SQLServer-InstanceAdminUserName)'
    SqlPassword: '$(SQLServer-InstanceAdminPassword)'
    deployType: 'SqlTask'
    SqlFile: 'dba01.sql'
    IpDetectionMethod: 'AutoDetect'
